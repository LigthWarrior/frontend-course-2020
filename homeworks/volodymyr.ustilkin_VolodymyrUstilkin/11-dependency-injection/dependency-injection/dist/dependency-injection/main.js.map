{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/vehicle.service.ts","./src/app/mocks/vehicles.mock.ts","./src/app/directives/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/directives/red-background-color.directive.ts","./src/app/pipes/transform-vehicle.pipe.ts","./src/app/directives/link-active.directive.ts","./src/app/services/index.ts","./src/app/pipes/index.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {Observable, of} from \"rxjs\";\nimport {delay} from \"rxjs/operators\";\nimport {MOCK_VEHICLES} from \"../mocks/vehicles.mock\";\nimport {Vehicle} from \"../models/vehicle\";\n\n@Injectable()\nexport class VehicleService {\n  getVehicles():Observable<Vehicle[]> {\n    return of(MOCK_VEHICLES).pipe(\n      delay(2000)\n    );\n  }\n}\n","import * as faker from 'faker';\nimport {Vehicle} from \"../models/vehicle\";\n\nconst count = 20;\nlet seed = 1222;\n\nfunction getFakeVehicle(): Vehicle {\n  seed += 1;\n  faker.seed(seed);\n\n  return {\n    color: faker.vehicle.color(),\n    fuel: faker.vehicle.fuel(),\n    manufacturer: faker.vehicle.manufacturer(),\n    model: faker.vehicle.model(),\n    type: faker.vehicle.type(),\n    vehicle: faker.vehicle.vehicle(),\n    vin: faker.vehicle.vin(),\n\n    post: {\n      slug: faker.helpers.slugify(faker.name.title()),\n      protocol: faker.internet.protocol(),\n    },\n\n    cost: {\n      account: faker.finance.account(),\n      accountName: faker.finance.accountName(),\n      amount: faker.finance.amount(),\n      currencyCode: faker.finance.currencyCode(),\n    },\n  };\n}\n\nexport const MOCK_VEHICLES = new Array(count).fill(0).map(getFakeVehicle);\n","import {RedBackgroundColorDirective} from \"./red-background-color.directive\";\nimport {LinkActiveDirective} from \"./link-active.directive\";\n\nexport const appDirective = [\n  RedBackgroundColorDirective,\n  LinkActiveDirective\n]\n\nexport * from \"./red-background-color.directive\";\nexport * from \"./link-active.directive\"\n","import {AfterContentInit, Component} from '@angular/core';\nimport {VehicleService} from \"./services\";\nimport {Vehicle} from \"./models/vehicle\";\nimport {finalize} from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements AfterContentInit {\n  title = 'dependency-injection';\n\n  vehicles: Vehicle[];\n  areVehiclesLoading: boolean;\n\n  constructor(private vehicleService: VehicleService) {\n  }\n\n  ngAfterContentInit() {\n    this.getVehicles();\n  }\n\n  getVehicles(): void {\n    this.areVehiclesLoading = true;\n    this.vehicleService.getVehicles()\n      .pipe(finalize(() => this.areVehiclesLoading = false))\n      .subscribe(value => {\n          this.vehicles = value;\n        }\n      );\n  }\n}\n","<div *ngIf=\"areVehiclesLoading\" class=\"loader\">Loading...</div>\n<div *ngIf=\"!areVehiclesLoading\">\n  <table class=\"vehicle-table\">\n    <tr>\n      <th>#</th>\n      <th>Added from</th>\n      <th>Vehicle</th>\n      <th>Price</th>\n    </tr>\n    <tr *ngFor=\"let vehicle of vehicles let i = index\">\n      <td><a class=\"table-cell-link\" [appLinkActive]=\"vehicle\">{{ i }}</a></td>\n      <td><a class=\"table-cell-link\" [appLinkActive]=\"vehicle\" appRedBackgroundColor>{{ vehicle.post.protocol }}</a></td>\n      <td><a class=\"table-cell-link\" [appLinkActive]=\"vehicle\">{{ vehicle | transformVehicle}}</a></td>\n      <td><a class=\"table-cell-link\" [appLinkActive]=\"vehicle\">{{ vehicle.cost.amount | currency : vehicle.cost.currencyCode}}</a></td>\n    </tr>\n  </table>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {appServices} from \"./services\";\nimport {appDirective} from \"./directives\";\nimport {appPipes} from \"./pipes\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...appDirective,\n    ...appPipes\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    ...appServices,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {AfterViewInit, Directive, ElementRef} from '@angular/core';\n\n@Directive({selector: '[appRedBackgroundColor]'})\nexport class RedBackgroundColorDirective implements AfterViewInit {\n  constructor(private element: ElementRef) {\n  }\n\n  ngAfterViewInit(): void {\n    if (this.element.nativeElement.innerHTML === 'http') {\n      this.element.nativeElement.style.backgroundColor = '#F00';\n    }\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {Vehicle} from \"../models/vehicle\";\n\n@Pipe({\n  name: 'transformVehicle'\n})\n\nexport class TransformVehiclePipe implements PipeTransform {\n  transform(vehicle: Vehicle): string {\n    return `${vehicle.manufacturer} - ${vehicle.model} (${vehicle.fuel})`;\n  }\n}\n","import {AfterViewInit, Directive, ElementRef, Input} from '@angular/core';\nimport {Vehicle} from \"../models/vehicle\";\n\n@Directive({selector: '[appLinkActive]'})\nexport class LinkActiveDirective implements AfterViewInit {\n  @Input() appLinkActive: Vehicle;\n\n  constructor(private el: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    if (this.appLinkActive.post.protocol === 'https') {\n      this.el.nativeElement.href = `https://www.google.com/search?q=${this.appLinkActive.vehicle.trim().replace(' ', '+')}`;\n    }\n  }\n}\n","import {VehicleService} from \"./vehicle.service\";\n\nexport const appServices = [\n  VehicleService\n]\n\nexport * from './vehicle.service';\n","import {TransformVehiclePipe} from \"./transform-vehicle.pipe\";\n\nexport const appPipes = [\n  TransformVehiclePipe\n]\n\nexport {TransformVehiclePipe} from \"./transform-vehicle.pipe\";\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}