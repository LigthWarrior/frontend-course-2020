{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/encode-data-form.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Credentials } from '../interfaces';\n\n@Injectable()\nexport class EncodeDataFormService {\n  dataFormFilds: Credentials = {\n    email: '',\n    password: ''\n  };\n\n  set(data: Credentials): void {\n    this.dataFormFilds.email = window.btoa(data.email);\n    this.dataFormFilds.password = window.btoa(data.password);\n\n    localStorage.setItem('dataFields', JSON.stringify(this.dataFormFilds));\n  }\n\n  get(): Credentials {\n    this.dataFormFilds = JSON.parse((localStorage.getItem('dataFields') || ''));\n\n    const decodedDataEmail: string = window.atob(this.dataFormFilds.email);\n    const decodedDataPassword: string = window.atob(this.dataFormFilds.password);\n\n    this.dataFormFilds.email = decodedDataEmail;\n    this.dataFormFilds.password = decodedDataPassword;\n\n    return this.dataFormFilds;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { EncodeDataFormService } from './services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  form: any;\n\n  constructor(private fb: FormBuilder, private encodeDataFormService: EncodeDataFormService) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: new FormControl('', [\n        Validators.email,\n        Validators.required\n      ]),\n      password: new FormControl('', [\n        Validators.required\n      ]),\n      checkbox: [false]\n    });\n\n    const { email, password } = this.encodeDataFormService.get();\n\n    this.form.patchValue({ email, password });\n\n  }\n\n  isControlInvalid(fieldName: string): boolean {\n    return (this.form.get(fieldName).invalid && this.form.get(fieldName).touched);\n  }\n\n  getContolError(controlName: string): string | null {\n    const control = this.form.get(controlName);\n    if (control.errors.required) return 'The field cannot be empty';\n    if (control.errors.email) return 'Enter correct email';\n    return null;\n  }\n\n  submit() {\n    if (this.form.invalid) return;\n\n    const formData = {...this.form.value};\n\n    alert(`Login successfully. Email: ${formData.email}, password: ${formData.password}`)\n\n    if (formData.checkbox) {\n      this.encodeDataFormService.set(formData);\n    }\n\n   this.form.reset();\n  }\n\n}\n","<div class=\"container\">\n  <h1>Angular reactive forms</h1>\n\n  <form class=\"form-container\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <div class=\"form-control\">\n      <label for=\"emailCaption\">Email: </label>\n      <input id=\"emailCaption\" class=\"field-input\" type=\"text\" placeholder=\"enter email\" formControlName=\"email\">\n      <div\n        *ngIf=\"isControlInvalid('email')\"\n        class=\"validation\"\n      >\n        <small>{{ getContolError('email') }}</small>\n      </div>\n    </div>\n\n    <div class=\"form-control\">\n      <label for=\"passwordCaption\">Password: </label>\n      <input id=\"passwordCaption\" class=\"field-input\" type=\"password\" placeholder=\"enter password\" formControlName=\"password\">\n      <div\n        *ngIf=\"isControlInvalid('password')\"\n        class=\"validation\"\n      >\n        <small>{{ getContolError('password') }}</small>\n    </div>\n    </div>\n\n    <div class=\"form-control\">\n      <input id=\"checkboxCaption\" type=\"checkbox\" formControlName=\"checkbox\">\n      <label for=\"checkboxCaption\"> remember me</label>\n    </div>\n\n    <button class=\"btn\" type=\"submit\" [disabled]=\"form.invalid\">Login</button>\n  </form>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { appServices } from './services';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    ...appServices\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { EncodeDataFormService } from './encode-data-form.service';\n\nexport const appServices = [\n  EncodeDataFormService\n];\n\nexport * from './encode-data-form.service';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}